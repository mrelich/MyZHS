      SUBROUTINE SIZE_GREISEN (ITYPE,E_MEV,TI)
C--------------------------------------------------------
C
C...Compute the average size (e- + e+) of a shower 
C   generated by a gamma, e- or e+ of initial energy 
C   E (MeV) created at depth TI (g cm^-2) 
C
C--------------------------------------------------------
      PARAMETER (MAXNR=10000)                  ! Max. number of rad. lengths

      COMMON / HYBRID_SIZE / XNEPSUM_HYBRID(MAXNR)
      COMMON / MAX_DEPTH / NRMAX 
      COMMON / MEDIUM / E_LPM, E_LPM_BREMSS, REF_N,
     #R0,Z,T0,RHO,BEE,C,A,RM,X0,X1,AI,AKO,EKE,AZ,ALZ2,ALZ,
     #Xi_Z,FACNOR,RADLEN, ALZ3, CH_THR,Z_Wgt, FACTOR_MS

      COMMON/ECRIT/E_CRIT

c Doesn't count photons below the critical energy 
      IF (E_MEV .LE. E_CRIT) RETURN

c      write(*,*) 'Greisen ',ITYPE,E_MEV,TI
      Y0 = LOG(E_MEV/E_CRIT)
c      FF = 0.31/SQRT(Y0)
      FF = 0.29/SQRT(Y0)  ! Corrected normalization to fit low E showers

c Initial depth in rad. length units
      XNR=TI/T0
      NRI=INT(XNR)+1
      DO NR=NRI,NRMAX
c         IF (ITYPE.EQ.0) THEN
           T = REAL(NR)-XNR
c         ELSE
c           T = REAL(NR)-XNR
c         END IF
         ALS = LOG((3.*T)/(T+2.*Y0)+1.e-6)   ! + 1.e-6 avoids log(0)

         S_shower = FF * EXP(T*(1.-1.5*ALS))

c Speed up code 
c         if (NRR.gt.10.and.S_shower.lt.1.e-2) goto 100

         XNEPSUM_HYBRID(NR) = XNEPSUM_HYBRID(NR) + S_shower
      END DO

c100   CONTINUE

      RETURN
      END
